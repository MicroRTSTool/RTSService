name: Build and Push Docker image to GCR

on:
  push:
    branches:
      - v1.0.0

env:
  PROJECT_ID: microrts-sample
  IMAGE: microrts.api
  TAG: 1.0.0
  CLUSTER_NAME: hipstershop-cluster
  ZONE: us-central1-c
  NAMESPACE: microrts

jobs:
  setup-build-publish:
    name: Setup, Build and Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Google Container Registry
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GKE_SA_KEY }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:${{ env.TAG }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GKE_SA_KEY }}

      - name: Configure Docker to use the gcloud command-line tool
        run: |
          gcloud auth configure-docker

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials $CLUSTER_NAME --zone $ZONE --project $PROJECT_ID

      - name: Get GKE Auth plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      - name: Build and Deploy Micro RTS API
        run: |
          # Replace the following with appropriate Kustomize commands for each microservice
          ./kustomize build ./deployment | kubectl apply -f -
          until kubectl get deployment cartservice -n $NAMESPACE; do sleep 1; done
          kubectl rollout status deployment/cartservice -n $NAMESPACE
          kubectl get services -o wide

